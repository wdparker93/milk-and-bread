1. Dictionary of US states, zoom levels, and latitude/longitude settings for map
DONE - 2. Logic for add/remove markers at address
DONE - 3. Integrate weather API
DONE - 4. Need supply volumes of material at locations
DONE - 5. Build out database layer and queries.
6. Build analytics panel
7. Rerouting algorithm will need to be able to
    a. Identify the "front" where the weather event is going to be.
        i. Also identify where the "front" is headed. 
        ii. Want to know a direction of sorts so appropriate stores that are out of the line of the storm can mobilize inventory appropriately.
    b. Prioritize areas based on urgency. Urgency composed of when weather event is expected and how much money is expected as a result of Rerouting
    c. Use a network of nodes to connect locations and route material from one location to another
    d. Find the most efficient route for rerouting material.
    e. Pull in material from sites further out to backfill material shipped in from other regions (rebalance to hit steady state)
DONE - 8. Show different icon or additional icon if weather event is anticipated
9. Build network of nodes that will allow creation of a spanning tree/map where the nodes are the stores and the paths are the routes between
10. Want update supply window to flash when Manage Inventory button is clicked for a location.
11. Do an analysis on value proposition. Get data that correlate weather with sales and show that using predictive analytics makes sense.
12. Be able to add weight(s) to the paths connecting the nodes in the map. Time to traverse path, cost to traverse path.
ONGOING - 13. Refactor components into more modular pieces.
DONE - 14. Dynamically build list of location-ids for inventory update panel using the list of location objects that exist.
ONGONIG - 15. Make better use of space/redisgn ux (ongoing). Try to give more room to analytics window.